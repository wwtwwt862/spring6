1.OCP开闭原则
    *什么是OCP？
        OCP是软件七大开发原则当中最基本的一个原则，开闭原则
        对扩展开
        对修改闭
    *OCP原则是最核心的，最基本的，其他的六个原则都是为了这个原则服务的
    *OCP开闭原则的核心是什么？
        只要你在扩展系统功能的时候，没有写好以前写好的代码，那么就是符合OCP开闭原则的
        反之，如果在扩展功能的时候，你修改了之前的代码，那么这个设计是失败的，违背了OCP原则
    *当进行系统扩展的时候，如果动了之前稳定的程序，之前所有的程序都需要重新进行测试，这是我们不行看到的，因为非常麻烦

2. 依赖倒置原则（DIP原则）
    *什么是依赖倒置原则？
        面向接口编程呢个，不要面向具体编程
    *依赖倒置原则的目的？
        降低程序的耦合度
    *什么叫违背依赖原则？
        上 依赖 下 就是违背
3.什么是控制反转？
    控制反转（Inversion Of Control）
    反转是什么呢？
    反转就是两件事
        第一件事：我不在程序中使用硬编码的形式来new对象了（new对象的权力交出去）
        第二件事：我不在程序中采用硬编码的方式来维护对象的关系了（对象之间关系的维护权，我也交出去）
    控制反转：是一种编程思想，或者叫做一种新型的设计模式，由于出现的比较新，没有被GoF23中设计模式中

4.Spring框架
    *Spring框架实现了控制反转Ioc这种思想
        spring框架可以帮你new 对象
        spring框架可以帮你维护对象和对象之间的关系
    *SPring是实现IOC思想的容器，其中比较重要的叫做，依赖注入（Dependency injection ,简称DI）
    *依赖注入DI，又包括常见的两种方式：
        第一种：set注入（执行set方法给属性赋值）
        第二种：构造方法注入（执行构造方法给属性赋值）
    *依赖注入中，依赖指的是什么，注入指的是什么？
        依赖：A对象和B对象的关系
        注入：是一种手段，通过这种手段，可以让A对象和B对象产生关系。
        依赖注入：对象A和对象B之间的关系，靠注入的手段来维护，而注入包括set注入和构造注入

5.注意术语
    OCP:开闭原则（开发原则）
    DIP：依赖倒置原则（开发原则）
    IoC：控制反转（一种思想，一种新型的设计模式）
    DI：依赖注入 （控制反转思想的具体实现方式）


